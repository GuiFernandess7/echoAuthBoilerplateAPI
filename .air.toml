root = "."
testdata_dir = "testdata"
tmp_dir = "tmp" # Directory for temporary build files

[build]
# Add '-a' to force recompilation of all packages, preventing Go cache issues.
# Ensure the output binary explicitly has .exe for Windows.
# The './cmd' specifies your main package location.
cmd = "go build -a -o ./tmp/main.exe ./cmd"
bin = "./tmp/main.exe" # Explicitly refer to the .exe for execution on Windows

delay = 1000 # Delay in milliseconds before triggering a rebuild after file changes
exclude_dir = ["assets", "tmp", "vendor", "testdata", "logs"] # Exclude logs directory to prevent infinite loops
exclude_file = []
exclude_regex = ["_test.go"]
exclude_unchanged = false
follow_symlink = false
full_bin = ""
# Include all Go source directories relevant to your project.
# "." watches the root directory, and often covers everything.
# Explicitly including "cmd" and "internal" is good practice if your structure relies on them.
include_dir = ["cmd", "internal", "."]
include_ext = ["go", "tpl", "tmpl", "html", "css", "js", "env"] # Added 'css', 'js', and 'env' for broader watching
include_file = []
kill_delay = "0s"
log = "build-errors.log"
poll = false
poll_interval = 0
post_cmd = []
pre_cmd = []
rerun = false
rerun_delay = 500
send_interrupt = false
stop_on_error = false
working_dir = "." # Execute commands from the project root

[color]
app = ""
build = "yellow"
main = "magenta"
runner = "green"
watcher = "cyan"

[log]
main_only = false
silent = false
time = false

[misc]
clean_on_exit = false

[proxy]
app_port = 0
enabled = false
proxy_port = 0

[screen]
clear_on_rebuild = false
keep_scroll = true